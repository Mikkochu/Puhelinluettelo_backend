{"version":3,"sources":["components/Numbers.js","components/Filters.js","components/Forms.js","components/Notifications.js","services/Phonenumbers.js","App.js","index.js"],"names":["Numbers","_ref","persons","filterInput","handleRemovePerson","filter","person","name","toLowerCase","includes","map","index","react_default","a","createElement","key","number","onClick","id","Filters","handleChangeFilter","value","onChange","Forms","AddName","newName","newNumber","handleChangeName","handleChangeNumber","onSubmit","type","Notifications","msg","indexOf","className","url","Phonenumbers","axios","get","then","response","data","personObj","post","put","concat","delete","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilterInput","_useState9","_useState10","message","setMessage","useEffect","components_Notifications","components_Filters","event","inputFieldValue","target","components_Forms","preventDefault","personToUpdate","find","window","confirm","updatedPerson","catch","error","setTimeout","components_Numbers","personToRemove","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fde4f67d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Numbers = ({ persons, filterInput, handleRemovePerson }) => {\r\n  //filtteröidään person-lista filtteröintikentän perusteella ja sitten renderöidään filtteröidyt näytölle\r\n  // Buttoniin on kiinnitetty eventhandler joka poistaa kyseisen henkilon. Eventhandler ottaa parametriksi id:n, joten jokaiseen nappiin on liitetty yksilöllinen id\r\n\r\n  //console.log(\"persons\", persons);\r\n  return persons\r\n    .filter(person =>\r\n      person.name.toLowerCase().includes(filterInput.toLowerCase())\r\n    )\r\n    .map((person, index) => (\r\n      <p key={index}>\r\n        {person.name} {person.number}\r\n        {\"   \"}\r\n        <button onClick={() => handleRemovePerson(person.id)}>Delete</button>\r\n      </p>\r\n    ));\r\n};\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\n\r\nconst Filters = ({ filterInput, handleChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      Filter shown with:{\" \"}\r\n      <input value={filterInput} onChange={handleChangeFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\n\r\nconst Forms = ({\r\n  AddName,\r\n  newName,\r\n  newNumber,\r\n  handleChangeName,\r\n  handleChangeNumber\r\n}) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={AddName}>\r\n        <div>\r\n          Name: <input value={newName} onChange={handleChangeName} />\r\n        </div>\r\n        <div>\r\n          Number: <input value={newNumber} onChange={handleChangeNumber} />\r\n        </div>\r\n        <div>\r\n          <br />\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","import React from \"react\";\r\n\r\nconst Notifications = ({ msg }) => {\r\n  if (msg === null) {\r\n    return null;\r\n  }\r\n\r\n  if (msg.indexOf(\"Error\") === 0) {\r\n    return <div className=\"error\">{msg}</div>;\r\n  } else {\r\n    return <div className=\"notification\">{msg}</div>;\r\n  }\r\n};\r\n\r\nexport default Notifications;\r\n","import axios from \"axios\";\r\nconst url = \"/api/persons\";\r\n\r\nconst getData = () => {\r\n  const request = axios.get(url);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst createPhonebook = personObj => {\r\n  const request = axios.post(url, personObj);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst removePerson = id => {\r\n  return axios.delete(`${url}/${id}`);\r\n};\r\n\r\nconst updatePhonebook = (id, personObj) => {\r\n  const request = axios.put(`${url}/${id}`, personObj);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {\r\n  getData,\r\n  createPhonebook,\r\n  updatePhonebook,\r\n  removePerson\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport Numbers from \"./components/Numbers\";\nimport Filters from \"./components/Filters\";\nimport Forms from \"./components/Forms\";\nimport Notifications from \"./components/Notifications\";\nimport Phonenumbers from \"./services/Phonenumbers\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\"); // nimi inputin arvo\n  const [newNumber, setNewNumber] = useState(\"\"); //numero inputin arvo\n  const [filterInput, setFilterInput] = useState(\"\"); //filter inputin arvo\n  const [message, setMessage] = useState(null); //viesti onnistuneesta operaatiosta\n\n  useEffect(() => {\n    Phonenumbers.getData().then(person => {\n      setPersons(person);\n    });\n  }, []);\n\n  const handleChangeName = event => {\n    let inputFieldValue = event.target.value;\n    //console.log(inputFieldValue);\n    setNewName(inputFieldValue);\n  };\n\n  const handleChangeNumber = event => {\n    let inputFieldValue = event.target.value;\n    //console.log(inputFieldValue);\n    setNewNumber(inputFieldValue);\n  };\n\n  const handleChangeFilter = event => {\n    let inputFieldValue = event.target.value;\n    //console.log(\"Filter\", inputFieldValue);\n    setFilterInput(inputFieldValue);\n  };\n\n  const handleRemovePerson = id => {\n    const personToRemove = persons.find(person => person.id === id);\n\n    let message = `Do you really want to delete ${personToRemove.name}`;\n    let result = window.confirm(message); //Palauttaa boolean\n\n    if (result) {\n      //Jos totta niin poistetaan henkilo\n      Phonenumbers.removePerson(personToRemove.id).then(() => {\n        //SetPersoniin asetetaan filtteröity lista ilman poistettua henkilöä\n        setPersons(persons.filter(person => person.id !== personToRemove.id));\n      });\n      setMessage(`${personToRemove.name} removed`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  const AddName = event => {\n    event.preventDefault();\n    const personObj = { name: newName, number: newNumber };\n\n    const personToUpdate = persons.find(person => person.name === newName);\n\n    const checkList = persons.map(person => person.name);\n    //Tarkastaa onko newName persons listassa\n    if (checkList.includes(newName)) {\n      let message = `${newName} is already added to the phonebook, replace the old number with a new one?`;\n      let result = window.confirm(message);\n      // Jos käyttäjä klikkaa ok niin päivitetään serverillä olevaa listaa personsObj ja asetetaan Appissa olevaan persons-tilamuuttujaan\n      // vanha lista ja updatephonebook-metodin palauttama uusi henkilö\n      if (result) {\n        Phonenumbers.updatePhonebook(personToUpdate.id, personObj)\n          .then(\n            updatedPerson => {\n              //updatedPerson on sama kuin personObj. Sama nimi ja id, uusi numero.\n              setPersons(\n                persons.map(person =>\n                  person.id !== personToUpdate.id ? person : updatedPerson\n                )\n              );\n            }\n            //Jos loopattu person.id on eri kuin päivitetyn henkilön id niin vanhan listan person uuteen listaan. Jos id on sama niin lisätään updated person, jolla on nyt uusi numero.\n          )\n          .catch(error => {\n            setMessage(\n              `Error: Information about ${\n                personToUpdate.name\n              } has already been removed from the server`\n            );\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n            setPersons(\n              persons.filter(person => person.id !== personToUpdate.id)\n            );\n          });\n        setMessage(`Number for ${personToUpdate.name} is updated`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      }\n    } else {\n      Phonenumbers.createPhonebook(personObj)\n        .then(person => {\n          setPersons(persons.concat(person));\n          setMessage(`Added ${newName}`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch(error => {\n          setMessage(`${error.response.data.error} `);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications msg={message} />\n      <br />\n      <Filters\n        filterInput={filterInput}\n        handleChangeFilter={handleChangeFilter}\n      />\n      <h2>Add a new</h2>\n      <Forms\n        AddName={AddName}\n        newName={newName}\n        newNumber={newNumber}\n        handleChangeName={handleChangeName}\n        handleChangeNumber={handleChangeNumber}\n      />\n      <h2>Numbers:</h2>\n      <Numbers\n        persons={persons}\n        filterInput={filterInput}\n        handleRemovePerson={handleRemovePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}